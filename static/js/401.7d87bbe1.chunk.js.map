{"version":3,"file":"static/js/401.7d87bbe1.chunk.js","mappings":"4PAGMA,EAAG,mCAEF,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAwBC,GAAxB,gFACCC,EADD,uCAC4CD,EAD5C,oBACgEF,GADhE,SAGkBI,EAAAA,EAAAA,IAAUD,GAH5B,cAGCE,EAHD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gFACCJ,EADD,4DACiEH,EADjE,kBAC8EO,GAD9E,SAGkBH,EAAAA,EAAAA,IAAUD,GAH5B,cAGCE,EAHD,yBAKEA,GALF,kEAQPJ,EAASO,UAAY,CACnBN,SAAUO,IAAAA,OAAAA,YAGZH,EAAeE,UAAY,CACzBD,MAAOE,IAAAA,OAAAA,W,2HCzBIC,E,QAASC,GAAAA,EAAH,8C,SCkCnB,EA9BgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OAVAE,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,GAAS,SAAD,OAAUc,EAAV,aACLG,MAAK,SAAAC,GACJL,EAAWK,EAAKC,KAAKC,QACtB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACR,IAEsB,IAAnBF,EAAQa,QACb,6DAEA,wBACGb,EAAQc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,UAACpB,EAAD,sBAAiBmB,MACjB,uBAAIC,MAFGF,EAKZ,KAGN,C","sources":["components/FetchApi.jsx","styles/Reviews.stuled.js","components/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = `db4a3ae686a3cf9655de72dc5716eec8`;\n\nexport async function FetchApi(endPoint) {\n  const BASE_URL = `https://api.themoviedb.org/3/${endPoint}?api_key=${KEY}`;\n\n  const response = await axios.get(BASE_URL);\n\n  return response;\n}\n\nexport async function FetchSearchApi(query) {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`;\n\n  const response = await axios.get(BASE_URL);\n\n  return response;\n}\n\nFetchApi.propTypes = {\n  endPoint: PropTypes.string.isRequired,\n};\n\nFetchSearchApi.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nexport const Author = styled.p`\n  font-weight: bold;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { FetchApi } from './FetchApi';\nimport { Author } from '../styles/Reviews.stuled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    FetchApi(`movie/${movieId}/reviews`)\n      .then(resp => {\n        setReviews(resp.data.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return reviews.length === 0 ? (\n    <p> There is no reviewsðŸŒ»</p>\n  ) : (\n    <ul>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <Author>Author: {author}</Author>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","FetchApi","endPoint","BASE_URL","axios","response","FetchSearchApi","query","propTypes","PropTypes","Author","styled","useState","reviews","setReviews","movieId","useParams","useEffect","then","resp","data","results","catch","error","console","log","length","map","id","author","content"],"sourceRoot":""}