{"version":3,"file":"static/js/597.b4db620d.chunk.js","mappings":"mMA2CA,UAvCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAS,SAAD,OAAUH,EAAV,aACLI,MAAK,SAAAC,GACJN,EAAQM,EAAKC,KAAKR,KACnB,IACAS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACR,IACmB,IAAhBF,EAAKa,OACV,yCAEA,wBACGb,EACEc,QACC,SAACC,EAAOC,GAAR,OAAkBA,IAAUhB,EAAKiB,WAAU,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAMI,EAAnB,GAA5C,IAEDC,KAAI,YAA4C,IAAzCD,EAAwC,EAAxCA,GAAIE,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC9B,OACE,2BACE,gBACEC,IAAK,uCAAyCH,EAC9CI,IAAI,sBACJC,MAAO,OAET,uBAAIJ,KACJ,uCAAeC,OAPRJ,EAUZ,KAGR,C,4ICtCKQ,EAAG,mCAEF,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAAwBuB,GAAxB,gFACCC,EADD,uCAC4CD,EAD5C,oBACgED,GADhE,SAGkBG,EAAAA,EAAAA,IAAUD,GAH5B,cAGCE,EAHD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gFACCJ,EADD,4DACiEF,EADjE,kBAC8EM,GAD9E,SAGkBH,EAAAA,EAAAA,IAAUD,GAH5B,cAGCE,EAHD,yBAKEA,GALF,kEAQP1B,EAAS6B,UAAY,CACnBN,SAAUO,IAAAA,OAAAA,YAGZH,EAAeE,UAAY,CACzBD,MAAOE,IAAAA,OAAAA,W","sources":["components/Cast.jsx","components/FetchApi.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FetchApi } from './FetchApi';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    FetchApi(`movie/${movieId}/credits`)\n      .then(resp => {\n        setCast(resp.data.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n  return cast.length === 0 ? (\n    'There is no cast info yetðŸŒ¹'\n  ) : (\n    <ul>\n      {cast\n        .filter(\n          (value, index) => index === cast.findIndex(v => v.id === value.id)\n        )\n        .map(({ id, profile_path, name, character }) => {\n          return (\n            <li key={id}>\n              <img\n                src={'https://image.tmdb.org/t/p/original/' + profile_path}\n                alt=\"Actor/ress portrait\"\n                width={100}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = `db4a3ae686a3cf9655de72dc5716eec8`;\n\nexport async function FetchApi(endPoint) {\n  const BASE_URL = `https://api.themoviedb.org/3/${endPoint}?api_key=${KEY}`;\n\n  const response = await axios.get(BASE_URL);\n\n  return response;\n}\n\nexport async function FetchSearchApi(query) {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`;\n\n  const response = await axios.get(BASE_URL);\n\n  return response;\n}\n\nFetchApi.propTypes = {\n  endPoint: PropTypes.string.isRequired,\n};\n\nFetchSearchApi.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","FetchApi","then","resp","data","catch","error","console","log","length","filter","value","index","findIndex","v","id","map","profile_path","name","character","src","alt","width","KEY","endPoint","BASE_URL","axios","response","FetchSearchApi","query","propTypes","PropTypes"],"sourceRoot":""}