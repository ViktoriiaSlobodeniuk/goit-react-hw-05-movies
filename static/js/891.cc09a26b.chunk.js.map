{"version":3,"file":"static/js/891.cc09a26b.chunk.js","mappings":"6OAEaA,EAAYC,EAAAA,GAAAA,GAAH,yHAQTC,EAAYD,EAAAA,GAAAA,GAAH,8O,6BCsCtB,EA1Ca,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAS,SAAD,OAAUH,EAAV,aACLI,MAAK,SAAAC,GACJN,EAAQM,EAAKC,KAAKR,KACnB,IACAS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACR,IAEmB,IAAhBF,EAAKa,OACV,yCAEA,SAAC,KAAD,WACE,SAACjB,EAAD,UACGI,EACEc,QACC,SAACC,EAAOC,GAAR,OAAkBA,IAAUhB,EAAKiB,WAAU,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAMI,EAAnB,GAA5C,IAEDC,KAAI,YAA4C,IAAzCD,EAAwC,EAAxCA,GAAIE,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC9B,OACE,UAACzB,EAAD,YACE,gBACE0B,IAAK,uCAAyCH,EAC9CI,IAAI,yBAGN,uBAAIH,KACJ,uCAAeC,OAPDJ,EAUnB,OAIV,C,4IC3CKO,EAAG,mCAEF,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAwBsB,GAAxB,gFACCC,EADD,uCAC4CD,EAD5C,oBACgED,GADhE,SAGkBG,EAAAA,EAAAA,IAAUD,GAH5B,cAGCE,EAHD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gFACCJ,EADD,4DACiEF,EADjE,kBAC8EM,GAD9E,SAGkBH,EAAAA,EAAAA,IAAUD,GAH5B,cAGCE,EAHD,yBAKEA,GALF,kEAQPzB,EAAS4B,UAAY,CACnBN,SAAUO,IAAAA,OAAAA,YAGZH,EAAeE,UAAY,CACzBD,MAAOE,IAAAA,OAAAA,W,6NCvBIC,EAAQtC,EAAAA,GAAAA,GAAH,iHAQLuC,GAAavC,EAAAA,EAAAA,IAAOwC,EAAAA,GAAPxC,CAAH,yHAOVyC,EAAYzC,EAAAA,GAAAA,IAAH,uFAMT0C,EAAY1C,EAAAA,GAAAA,GAAH,oGAOT2C,EAAO3C,EAAAA,GAAAA,GAAH,6OAaJ4C,EAAW5C,EAAAA,GAAAA,GAAH,wC","sources":["styles/Cast.styled.js","components/Cast.jsx","components/FetchApi.jsx","styles/Home.styled.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const ActorItem = styled.li`\n  flex-basis: calc(100% / 6 - 20px);\n  display: flex;\n  flex-direction: column;\n  background-color: rgb(157, 162, 162, 0.25);\n  border-radius: 8px;\n  overflow: hidden;\n  text-align: center;\n  color: white;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorItem, ActorList } from 'styles/Cast.styled';\nimport { Container } from 'styles/Home.styled';\nimport { FetchApi } from './FetchApi';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    FetchApi(`movie/${movieId}/credits`)\n      .then(resp => {\n        setCast(resp.data.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return cast.length === 0 ? (\n    'There is no cast info yetðŸŒ¹'\n  ) : (\n    <Container>\n      <ActorList>\n        {cast\n          .filter(\n            (value, index) => index === cast.findIndex(v => v.id === value.id)\n          )\n          .map(({ id, profile_path, name, character }) => {\n            return (\n              <ActorItem key={id}>\n                <img\n                  src={'https://image.tmdb.org/t/p/original/' + profile_path}\n                  alt=\"Actor/ress portrait\"\n                  // width={100}\n                />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </ActorItem>\n            );\n          })}\n      </ActorList>\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = `db4a3ae686a3cf9655de72dc5716eec8`;\n\nexport async function FetchApi(endPoint) {\n  const BASE_URL = `https://api.themoviedb.org/3/${endPoint}?api_key=${KEY}`;\n\n  const response = await axios.get(BASE_URL);\n\n  return response;\n}\n\nexport async function FetchSearchApi(query) {\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`;\n\n  const response = await axios.get(BASE_URL);\n\n  return response;\n}\n\nFetchApi.propTypes = {\n  endPoint: PropTypes.string.isRequired,\n};\n\nFetchSearchApi.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: wheat;\n\n  padding-top: 25px;\n  padding-bottom: 25px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const Container = styled.div`\n  max-width: 1600px;\n\n  margin: 0 auto;\n  padding: 0 15px;\n`;\nexport const TrendList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / 4 - 20px);\n\n  background-color: rgb(157, 162, 162, 0.25);\n  border-radius: 8px;\n  overflow: hidden;\n  text-align: center;\n\n  :hover {\n    box-shadow: 0px 10px 10px #072f13;\n  }\n`;\n\nexport const SubTitle = styled.h3`\n  padding: 5px;\n`;\n"],"names":["ActorList","styled","ActorItem","useState","cast","setCast","movieId","useParams","useEffect","FetchApi","then","resp","data","catch","error","console","log","length","filter","value","index","findIndex","v","id","map","profile_path","name","character","src","alt","KEY","endPoint","BASE_URL","axios","response","FetchSearchApi","query","propTypes","PropTypes","Title","StyledLink","Link","Container","TrendList","Item","SubTitle"],"sourceRoot":""}